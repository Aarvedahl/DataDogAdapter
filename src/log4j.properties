# This file controls the logging strategy for the server (ibmdisrv) when started
# from the command line.
#
# You will normally configure the logging strategy of the server by adding appenders
# using the Configuration Editor (ibmditk). This file only defines the baseline
# that is independent of the configuration files you are using.
#
# See the Tivoli Directory Integrator documentation for more information on the contents of this file.
#


log4j.rootCategory=INFO, Default

##########ROLLING FILE SIZE APPENDER
## This is the default logger, you will see that it logs to ibmdi.log
## TDIRollingFileAppender behaves like org.apache.log4j.RollingFileAppender, except that is also
## rolls over log files when opening the log files, if Append=false.
## The RollingFileAppender rolls over log files when they reach a certain size
## specified by the MaxFileSize parameter, and the number of backup files is specified by MaxBackupIndex

log4j.appender.Default=org.apache.log4j.RollingFileAppender
log4j.appender.Default.File=ibmdi.log
log4j.appender.Default.Append=false
log4j.appender.Default.MaxFileSize=10MB
log4j.appender.Default.MaxBackupIndex=3
log4j.appender.Default.layout=org.apache.log4j.PatternLayout
log4j.appender.Default.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n

#Example settings for changing the default logger

## FILE APPENDER
## The FileAppender writes to a file that grows bigger and bigger.
## As append=false, the log file is reset every time the server is started.
#log4j.appender.Default=org.apache.log4j.FileAppender
#log4j.appender.Default.file=logs/ibmdi.log
#log4j.appender.Default.layout=org.apache.log4j.PatternLayout
#log4j.appender.Default.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n
#log4j.appender.Default.append=false

##########DAILY OUTPUT LOG4J SETTINGS
## With the DailyRollingFileAppender the underlying file is rolled over at a user chosen frequency.
##The rolling schedule is specified by the DatePattern option 

#log4j.appender.Default=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.Default.file=logs/ibmdi.log
#log4j.appender.Default.DatePattern='.'yyyy-MM-dd
#log4j.appender.Default.layout=org.apache.log4j.PatternLayout
#log4j.appender.Default.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n

# This logger logs to the console
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[%t] %-5p - %m%n

# You may change the logging category of these subsystems to DEBUG
# if you want to investigate particular problems. This may
# generate a lot of output.
# ...com.ibm.di.config describes the loading of the configuration file (.xml),
#    and how the internal configuration structure is built.
#    By default warnings and higher will be logged to the console as well as to the normal log file.
# ...com.ibm.di.TDIProperties gives information about property stores
# ...com.ibm.di.loader gives information about jar files, and where classes are found.
#    It also loads idi.inf files, which provides Connectors/Parsers/Function information
#    for the Configuration Editor.
log4j.logger.com.ibm.di.config=WARN, CONSOLE
log4j.logger.com.ibm.di.TDIProperties=WARN, CONSOLE
log4j.logger.com.ibm.di.loader=WARN

# Uncomment the lines below to activate them

# Here is an example that logs to myFile.log
#log4j.appender.fileLOG=org.apache.log4j.FileAppender
#log4j.appender.fileLOG.file=myFILE.log
#log4j.appender.fileLOG.layout=org.apache.log4j.PatternLayout
#log4j.appender.fileLOG.layout.ConversionPattern=%d{ISO8601} %-5p [%c] - %m%n
#log4j.appender.fileLOG.append=false


# Finally, make use of the loggers defined above:
# Tell AssemblyLines myAL to log using CONSOLE logger defined above.

# log4j.logger.AssemblyLine.AssemblyLines/myAL=INFO, CONSOLE

# Or you could log to myFile.log

# log4j.logger.AssemblyLine.AssemblyLines/myAL=INFO, fileLOG

# REST/Dashboard logging
log4j.logger.org.apache.wink=ERROR, Default

log4j.logger.org.apache.axis2.handlers.addressing.AddressingOutHandler=WARN
log4j.logger.org.apache.axis2.description.Configuration=WARN
log4j.logger.org.apache.axis2.description.ParameterIncludeImpl=WARN
log4j.logger.org.apache.axis2.description.AxisService=WARN
log4j.logger.org.apache.axiom.om.util.StAXUtils=WARN
log4j.logger.org.apache.axiom.om.impl.llom.OMNodeImpl=WARN
log4j.logger.org.apache.axiom.om.impl.llom.OMElementImpl=WARN
log4j.logger.org.apache.axiom.om.impl.MTOMXMLStreamWriter=WARN
log4j.logger.org.apache.axis2.deployment.RepositoryListener=WARN
log4j.logger.org.apache.axis2.deployment.util.Utils=WARN
log4j.logger.org.apache.axis2.deployment.DeploymentEngine=WARN
log4j.logger.org.apache.axis2.deployment.ModuleDeployer=WARN
log4j.logger.org.apache.axis2.deployment.ClusterBuilder=WARN
log4j.logger.org.apache.axis2.engine.AxisConfiguration=WARN
log4j.logger.org.apache.axis2.engine.Phase=WARN
log4j.logger.org.apache.axis2.handlers.addressing.AddressingInHandler=WARN
log4j.logger.org.apache.axis2.i18n.ProjectResourceBundle=WARN
log4j.logger.org.apache.axis2.transport.http.server.DefaultConnectionListener=WARN
log4j.logger.org.apache.axis2.description.WSDL11ToAxisServiceBuilder=WARN
log4j.logger.org.apache.axis2.wsdl.util.WSDLDefinitionWrapper=WARN
